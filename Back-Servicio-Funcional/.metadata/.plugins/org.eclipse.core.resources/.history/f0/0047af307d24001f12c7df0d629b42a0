package co.edu.uco.bodyhealty.api.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import co.edu.uco.bodyhealty.api.response.servicio.ServicioResponse;
import co.edu.uco.bodyhealty.business.fecade.ConsultarServiciosFachada;
import co.edu.uco.bodyhealty.business.fecade.concrete.ConsultarServiciosFachadaImpl;
import co.edu.uco.bodyhealty.crosscutting.helpers.NumericHelper;
import co.edu.uco.bodyhealty.dto.ServicioDTO;

@RestController
@RequestMapping("/api/v1/servicios")
public class ServicioController {
	
	@GetMapping("/dummy")
	public ServicioDTO getDummy() {
		return ServicioDTO.build();
	}

	@GetMapping
	public ResponseEntity<ServicioResponse> consultar(@RequestParam(required = false, defaultValue = "0") String id, @RequestParam(required = false, defaultValue = "") String nombre,  @RequestParam(required = false, defaultValue = "") String duracion,  @RequestParam(required = false, defaultValue = "") String descripcion) {

		ServicioResponse servicioResponse = ServicioResponse.build();
		HttpStatus httpStatusResponse = HttpStatus.OK;

		
		
		try {
			
			final var servicioDtpFilter = ServicioDTO.build().setId(NumericHelper.convertToInt(id)).setNombreServicio(nombre).setDuracionEstimada(NumericHelper.convertToInt(duracion)).setDescripcion(descripcion);
			final ConsultarServiciosFachada fachada = new ConsultarServiciosFachadaImpl();
			servicioResponse.setDatos(fachada.execute(paisDtpFilter));
			servicioResponse.getMensajes().add("Paises consultados exitosamente");

		} catch (final TiendaChepitoException exception) {
			exception.printStackTrace();
			paisResponse.getMensajes().add(exception.getMensajeUsuario());
			httpStatusResponse = HttpStatus.BAD_REQUEST;

		} catch (final Exception exception) {
			exception.printStackTrace();
			paisResponse.getMensajes()
					.add("Se ha presentado un mensaje inesperado tratando de consultar la información de los paises");
			httpStatusResponse = HttpStatus.INTERNAL_SERVER_ERROR;
		}

		return new ResponseEntity<>(paisResponse, httpStatusResponse);
	}

	@PostMapping
	public ResponseEntity<PaisResponse> crear(@RequestBody PaisDTO pais) {

		PaisResponse paisResponse = PaisResponse.build();
		HttpStatus httpStatusResponse = HttpStatus.OK;
		try {
			// Llamars
			paisResponse.getDatos().add(pais);
			paisResponse.getMensajes().add("Pais creado exitosamente");

		} catch (final TiendaChepitoException exception) {
			exception.printStackTrace();
			paisResponse.getMensajes().add(exception.getMensajeUsuario());
			httpStatusResponse = HttpStatus.BAD_REQUEST;

		} catch (final Exception exception) {
			exception.printStackTrace();
			paisResponse.getMensajes()
					.add("Se ha presentado un mensaje inesperado tratando de consultar la información de los paises");
			httpStatusResponse = HttpStatus.INTERNAL_SERVER_ERROR;
		}

		return new ResponseEntity<>(paisResponse, httpStatusResponse);
	}


}
