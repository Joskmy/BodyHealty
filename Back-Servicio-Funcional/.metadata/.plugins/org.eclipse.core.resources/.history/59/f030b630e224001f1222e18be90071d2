package co.edu.uco.bodyhealty.business.fecade.concrete;

import java.util.List;

import co.edu.uco.bodyhealty.business.assembler.dto.concrete.ServicioDTODomainAssembler;
import co.edu.uco.bodyhealty.business.domain.ServicioDomain;
import co.edu.uco.bodyhealty.business.fecade.AgregarServicioFachada;
import co.edu.uco.bodyhealty.business.usecase.AgregarServicio;
import co.edu.uco.bodyhealty.business.usecase.concrete.AgregarServicioImpl;
import co.edu.uco.bodyhealty.crosscutting.exceptions.BodyHealtyException;
import co.edu.uco.bodyhealty.crosscutting.exceptions.custom.BusinessBodyHealtyException;
import co.edu.uco.bodyhealty.crosscutting.exceptions.messagecatalog.MessageCatalogStrategy;
import co.edu.uco.bodyhealty.crosscutting.exceptions.messagecatalog.data.CodigoMensaje;
import co.edu.uco.bodyhealty.data.dao.factory.DAOFactory;
import co.edu.uco.bodyhealty.data.dao.factory.enums.Factory;
import co.edu.uco.bodyhealty.dto.ServicioDTO;

public final class AgregarServicioFachadaImpl implements AgregarServicioFachada {
	private DAOFactory factory;

	public AgregarServicioFachadaImpl() {
		factory = DAOFactory.getFactory(Factory.POSTGRESQL);
	}

	@Override
	public void ejecutar(final ServicioDTO servicio) {
		try {
			factory.iniciarTransaccion();

			var servicioDomain = ServicioDTODomainAssembler.obtenerInstancia().ensamblarDominio(servicio);

			final AgregarServicio useCase = new AgregarServicioImpl(factory);
			useCase.ejecutar(servicioDomain);

			factory.confirmarTransaccion();
		} catch (final BodyHealtyException exception) {
			factory.cancelarTransaccion();
			throw exception;
		} catch (final Exception exception) {
			factory.cancelarTransaccion();
			var mensajeUsuario = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00035);
			var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00036);
			throw new BusinessBodyHealtyException(mensajeTecnico, mensajeUsuario);
		} finally {
			factory.cerrarConexion();
		}
	}

}
