package co.edu.uco.bodyhealty.crosscutting.exceptions.messagecatalog.impl;

import java.util.HashMap;
import java.util.Map;

import co.edu.uco.bodyhealty.crosscutting.exceptions.custom.CrosscuttingBodyHealtyException;
import co.edu.uco.bodyhealty.crosscutting.exceptions.messagecatalog.MessageCatalog;
import co.edu.uco.bodyhealty.crosscutting.exceptions.messagecatalog.MessageCatalogStrategy;
import co.edu.uco.bodyhealty.crosscutting.exceptions.messagecatalog.data.CodigoMensaje;
import co.edu.uco.bodyhealty.crosscutting.exceptions.messagecatalog.data.Mensaje;
import co.edu.uco.bodyhealty.crosscutting.helpers.ObjectHelper;

public final class MessageCatalogExternalService implements MessageCatalog {
	private final Map<String, Mensaje> mensajes = new HashMap<>();

	@Override
	public final void inicializar() {
		mensajes.clear();
		mensajes.put(CodigoMensaje.M00023.getIdentificador(),
				new Mensaje(CodigoMensaje.M00023, "Se ha presentado un problema tratando de realizar un insert de la información del país \\\"${1}\\\" en la tabla \"Servicio\" de la base de datos de PostgreSQL..."));
		mensajes.put(CodigoMensaje.M00024.getIdentificador(),
				new Mensaje(CodigoMensaje.M00024, "Se ha presentado un problema INESPERADO tratando de realizar un insert de la información del país \\\"${1}\\\" en la tabla \"Pais\" de la base de datos Azure SQL..."));
		mensajes.put(CodigoMensaje.M00025.getIdentificador(),
				new Mensaje(CodigoMensaje.M00025, "Se ha presentado un problema tratando de obtener la conexión con la base de datos PostgreSQL en el servidor. Por favor revise la traza de errores para identificar y solucionar el problema..."));
		mensajes.put(CodigoMensaje.M00026.getIdentificador(),
				new Mensaje(CodigoMensaje.M00026, "Se ha presentado un problema INESPERADO tratando de obtener la conexión con la base de datos PostgreSQL en el servidor. Por favor revise la traza de errores para identificar y solucionar el problema..."));
		mensajes.put(CodigoMensaje.M00027.getIdentificador(),
				new Mensaje(CodigoMensaje.M00027, "No ha sido posible llevar a cabo el registro de la información del nuevo servicio. Por favor intente de nuevo y en caso de persistir el problema, comuníquese con el administrador de BodyHealty..."));
		mensajes.put(CodigoMensaje.M00028.getIdentificador(),
				new Mensaje(CodigoMensaje.M00028, "No ha sido posible llevar a cabo la consulta de la información de los servicios. Por favor intente de nuevo y en caso de persistir el problema, comuníquese con el administrador."));
	
	}

	@Override
	public final String obtenerContenidoMensaje(final CodigoMensaje codigo, final String... parametros) {
		return obtenerMensaje(codigo, parametros).getContenido();
	}

	@Override
	public final Mensaje obtenerMensaje(CodigoMensaje codigo, final String... parametros) {

		if (ObjectHelper.getObjectHelper().isNull(codigo)) {
			var mensajeUsuario = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00002);
			var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00001);
			throw new CrosscuttingBodyHealtyException(mensajeTecnico, mensajeUsuario);
		}

		if (codigo.isBase()) {
			var mensajeUsuario = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00002);
			var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00005,
					codigo.getIdentificador());
			throw new CrosscuttingBodyHealtyException(mensajeTecnico, mensajeUsuario);
		}

		if (!mensajes.containsKey(codigo.getIdentificador())) {
			var mensajeUsuario = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00002);
			var mensajeTecnico = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00006,
					codigo.getIdentificador());
			throw new CrosscuttingBodyHealtyException(mensajeTecnico, mensajeUsuario);
		}


		return mensajes.get(codigo.getIdentificador());
	}
}
